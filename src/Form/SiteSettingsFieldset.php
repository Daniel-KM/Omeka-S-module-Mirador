<?php
namespace Mirador\Form;

use Zend\Form\Element;
use Zend\Form\Fieldset;

class SiteSettingsFieldset extends Fieldset
{
    /**
     * @var bool
     */
    protected $iiifServerIsActive = false;

    /**
     * @var array
     */
    protected $plugins = [];

    public function init()
    {
        // The module iiif server is required to display collections of items.
        $iiifServerIsActive = $this->getIiifServerIsActive();

        $this->setLabel('Mirador Viewer'); // @translate

        $this->add([
            'name' => 'mirador_append_item_set_show',
            'type' => Element\Checkbox::class,
            'options' => [
                'label' => 'Append automatically to item set page', // @translate
                'info' => 'If unchecked, the viewer can be added via the helper in the theme or the block in any page.', // @translate
            ],
            'attributes' => [
                'id' => 'mirador_append_item_set_show',
            ],
        ]);

        $this->add([
            'name' => 'mirador_append_item_show',
            'type' => Element\Checkbox::class,
            'options' => [
                'label' => 'Append automatically to item page', // @translate
                'info' => 'If unchecked, the viewer can be added via the helper in the theme or the block in any page.', // @translate
            ],
            'attributes' => [
                'id' => 'mirador_append_item_show',
            ],
        ]);

        $this->add([
            'name' => 'mirador_append_item_set_browse',
            'type' => Element\Checkbox::class,
            'options' => [
                'label' => 'Append automatically to item sets browse page', // @translate
                'info' => 'If unchecked, the viewer can be added via the helper in the theme or the block in any page.', // @translate
            ],
            'attributes' => [
                'id' => 'mirador_append_item_set_browse',
                'disabled' => !$iiifServerIsActive,
            ],
        ]);

        $this->add([
            'name' => 'mirador_append_item_browse',
            'type' => Element\Checkbox::class,
            'options' => [
                'label' => 'Append automatically to item browse page', // @translate
                'info' => 'If unchecked, the viewer can be added via the helper in the theme or the block in any page.', // @translate
            ],
            'attributes' => [
                'id' => 'mirador_append_item_browse',
                'disabled' => !$iiifServerIsActive,
            ],
        ]);

        $this->add([
            'name' => 'mirador_plugins',
            'type' => Element\Select::class,
            'options' => [
                'label' => 'Mirador plugins', // @translate
                'info' => 'Read the doc. Some plugins require json options to work. Cross compatibility has not been checked, so add them one by one and only the needed ones.', // @translate
                'documentation' => 'https://github.com/daniel-km/omeka-s-module-mirador#plugins',
                'value_options' => $this->getPlugins(),
                'empty_option' => '',
            ],
            'attributes' => [
                'id' => 'mirador_plugins',
                'class' => 'chosen-select',
                'multiple' => true,
                'data-placeholder' => 'Select pluginsâ€¦', // @translate
            ],
        ]);

        $this->add([
            'name' => 'mirador_config_item',
            'type' => Element\Textarea::class,
            'options' => [
                'label' => 'Mirador json config (item)', // @translate
                'info' => 'This json object will be merged with the default one generated by the module. Placeholders: {manifestUri} and {canvasID}.', // @translate
                'documentation' => 'https://github.com/daniel-km/omeka-s-module-mirador#usage',
            ],
            'attributes' => [
                'id' => 'mirador_config_item',
            ],
        ]);

        $this->add([
            'name' => 'mirador_config_collection',
            'type' => Element\Textarea::class,
            'options' => [
                'label' => 'Mirador json config (collection)', // @translate
                'info' => 'Iiif collections are Omeka item sets, but may be search results too.',
            ],
            'attributes' => [
                'id' => 'mirador_config_collection',
            ],
        ]);
    }

    /**
     * @param bool $iiifServerIsActive
     */
    public function setIiifServerIsActive($iiifServerIsActive)
    {
        $this->iiifServerIsActive = $iiifServerIsActive;
        return $this;
    }

    /**
     * @return bool
     */
    public function getIiifServerIsActive()
    {
        return $this->iiifServerIsActive;
    }

    /**
     * @param array $plugins
     */
    public function setPlugins(array $plugins)
    {
        $this->plugins = $plugins;
        return $this;
    }

    /**
     * @return array
     */
    public function getPlugins()
    {
        return $this->plugins;
    }
}
